name: Scala CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'sbt'
    - name: Run tests
      run: sbt clean coverage test
    - name: Generate Coverage Report
      run: sbt coverageReport
    - name: Generate coverage report and get badge
      run: |
        # ....
        # [info] Generating scoverage reports...
        # [info] Written Cobertura report [/home/runner/work/expression-parser/expression-parser/target/scala-2.13/coverage-report/cobertura.xml]
        # [info] Written XML coverage report [/home/runner/work/expression-parser/expression-parser/target/scala-2.13/scoverage-report/scoverage.xml]
        # [info] Written HTML coverage report [/home/runner/work/expression-parser/expression-parser/target/scala-2.13/scoverage-report/index.html]
        # [info] Statement coverage.: 90.70%
        # [info] Branch coverage....: 100.00%
        # [info] Coverage reports completed
        # [info] Coverage is above minimum [90.70% > 50.0%]
        # [info] All done. Coverage was [90.70%]
        # [success] Total time: 1 s, completed Aug 16, 2022, 11:23:18 AM

        SUMMARY="$(sbt coverageReport | tail -2 | head -1)"
        # process.env.COVERAGE = '31.93%';
        echo "COVERAGE=$(echo SUMMARY | cut -d " " -f 6 | cut -b 2- | rev | cut -b 2- | rev)" >> $GITHUB_ENV

        # var REF = 'refs/pull/27/merge.json';
        REF=${{ github.ref }}
        # console.log('github.ref: ' + REF);
        echo "github.ref: $REF"
        # var PATHS = REF.split('/');
        IFS='/' read -ra PATHS <<< "$REF"
        # var BRANCH_NAME = PATHS[1] + '_' + PATHS[2];
        BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
        # console.log(BRANCH_NAME); // 'pull_27'
        echo $BRANCH_NAME
        # process.env.BRANCH = 'pull_27';
        echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
    - name: Create the Badge
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 7d4c25ef2e97e8de523ef7c1fee26e8e
        filename: expression-parser__${{ env.BRANCH }}.json
        label: Test Coverage
        message: ${{ env.COVERAGE }}
        color: green
        namedLogo: scoverage